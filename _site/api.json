{
    "website_title": "Mi blog",
    "website_url": "/blog/",
    "posts": [
        
            {
                "title": "Servidor de virtualización en Raspberry Pi 4",
                "content_text": "IntroducciónHola! En este post voy a explicar como tener un servidor de virtualización en una Raspberry Pi 4, aunque estas instrucciones no son exclusivas de la Raspberry pues se puede conseguir lo mismo en cualquier Hardware que tenga instalado GNU/Linux.La utilidad de un servidor de virtualización es básicamente infinita, puedes emular cualquier Hardware ya sea para probar distintos sistemas operativos o para aislar distintos servicios. En este caso al ser un Hardware relativamente débil y con poca memoria, como lo es la Raspberry Pi 4, no será posible correr múltiples máquinas virtuales.Además del servidor de virtualización, se configurará un puente de red, esto con el objetivo de poder acceder a las máquinas virtuales desde la red local.¿Qué se necesita?  Computadora con Debian o derivada como sistema operativo y espacio suficiente para tus máquinas virtuales. (En este caso una Raspberry Pi 4, 4 GB RAM con micro sd de 64 GB).  Conexión de Ethernet para conectarte a la red.  Servidor SSH para conexión remota. (Es posible seguir la guía de forma local)Instalar lo necesarioEn primer lugar es necesario instalar un conjunto de software para virtualizar. En este caso qemu-kvmapt install qemu qemu-kvm qemu-system qemu-utils libvirt-clients libvirt-daemon-system virtinst virt-manager bridge-utilsY activamos el demonio de libvirtsystemctl enable libvirtdPuente de redAhora es necesario verificar nuestra conexión a la red, esto se puede conseguir con el comandoip aEjemplo del resultado1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000   \t\t link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\t\tinet 127.0.0.1/8 scope host lo   \t\t\tvalid_lft forever preferred_lft forever\t\tinet6 ::1/128 scope host    \t\t\tvalid_lft forever preferred_lft forever2: enp1s0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\t\tlink/ether 52:54:00:da:fd:b4 brd ff:ff:ff:ff:ff:ff\t\tinet 192.168.122.220/24 brd 192.168.122.255 scope global dynamic enp1s0   \t\t\tvalid_lft 3538sec preferred_lft 3538sec\t\tinet6 fe80::5054:ff:feda:fdb4/64 scope link    \t\t\tvalid_lft forever preferred_lft foreverDesde aquí podemos verificar que la interfaz de nuestra conexión por Ethernet tiene como nombre enp1s0 y la ip es 192.168.122.220, sabiendo esto podemos crear el puente, necesitamos entrar al archivo de configuración de interfaces. En Debian es /etc/network/interfacesvim /etc/network/interfacesDentro debemos de escribir la configuración del puente, tras modificar el archivo debe quedar así (revisa la ip, gateway y el nombre de la interfaz pues pueden no ser las mismas).# This file describes the network interfaces available on your system# and how to activate them. For more information, see interfaces(5).source /etc/network/interfaces.d/*# The loopback network interfaceauto loiface lo inet loopback# The primary network interfaceallow-hotplug enp1s0iface enp1s0 inet staticauto br0iface br0 inet static\taddress 192.168.122.220\tnetmask 255.255.255.0\tgateway 192.168.122.1\tbridge_ports enp1s0\tup /usr/sbin/brctl stp br0 onYa que estamos seguros de nuestra configuración, reiniciaremos para que estas configuraciones se apliquen. Al reiniciar podremos ver nuestra configuración algo así.1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\t\tlink/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\t\tinet 127.0.0.1/8 scope host lo   \t\t\tvalid_lft forever preferred_lft forever\t\tinet6 ::1/128 scope host    \t\t\tvalid_lft forever preferred_lft forever2: enp1s0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast master br0 state UP group default qlen 1000\t\tlink/ether 52:54:00:da:fd:b4 brd ff:ff:ff:ff:ff:ff3: br0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default qlen 1000\t\tlink/ether da:64:e7:16:20:c8 brd ff:ff:ff:ff:ff:ff\t\tinet 192.168.122.220/24 brd 192.168.122.255 scope global br0   \t\t\tvalid_lft forever preferred_lft forever\t\tinet6 fe80::d864:e7ff:fe16:20c8/64 scope link    \t\t\tvalid_lft forever preferred_lft foreverComo podemos observar, ahora nuestra conexión se encuentra en la interfaz br0 que es nuestro puente.¡Listo! Ya tenemos red, ahora podemos empezar a crear nuestras máquinas virtuales.Creación de máquinas virtualesPara poder correr una máquina virtual, en primer lugar será necesario crear un disco para la máquina virtual.# Creamos el directorio para nuestros discosmkdir kvm# Creamos el disco, es posible cambiar el nombre y el tamaño del discoqemu-img create -f qcow2 ./debian.qcow2 8G# Agregamos la configuración para conectarnos con qemu mientras usemos los comandos virt-install y virshmkdir -p ~/.config/libvirt/echo 'uri_default = \"qemu:///system\"' | tee -a ~/.config/libvirt/libvirt.confYa que tenemos el disco, podemos instalar el sistema operativo.virt-install \\\t# Nombre de la máquina   \t\t--name debian \\\t# Cantidad de memoria RAM\t\t--memory 1024 \\ \t# Ubicación del disco de la máquina virtual\t\t--disk path=./debian.qcow2,size=8,format=qcow2,bus=virtio \\\t# Número de núcleos para la maquina virtual\t\t--vcpus 1 \\\t\t--os-type linux \\\t# Variante del sistema operativo\t\t--os-variant debian10 \\\t# Nombre de la interfaz de red, en este caso br0\t\t--network bridge=br0,model=virtio \\\t# Configuración sin interfaz gráfico\t\t--graphics none \\\t\t--console pty,target_type=serial \\\t# Dirección de la instalación (cambiar la arquitectura si no usas arm64)\t\t--location 'http://ftp.debian.org/debian/dists/buster/main/installer-arm64/' \\\t\t--extra-args 'console=ttyS0,115200n8 serial'Continuamos con nuestra instalación normal y ya podemos usar la máquina virtual. Puedes aprender como administrar la máquina virtual con el comandoman virshConclusiónCrear un servidor de virtualización suele sonar más complicado de lo que es, espero que esta guía te haya sido de utilidad. :)Algunas fuentesLast Dragon .(2021). Configurar Debian como servidor de virtualizacion con QEMU/KVM . Video de Youtube: https://www.youtube.com/watch?v=ADqWvmDbY0o",
                "content_html": "<h1 id=\"introducción\">Introducción</h1><p>Hola! En este post voy a explicar como tener un servidor de virtualización en una Raspberry Pi 4, aunque estas instrucciones no son exclusivas de la Raspberry pues se puede conseguir lo mismo en cualquier Hardware que tenga instalado GNU/Linux.</p><p>La utilidad de un servidor de virtualización es básicamente infinita, puedes emular cualquier Hardware ya sea para probar distintos sistemas operativos o para aislar distintos servicios. En este caso al ser un Hardware relativamente débil y con poca memoria, como lo es la Raspberry Pi 4, no será posible correr múltiples máquinas virtuales.</p><p>Además del servidor de virtualización, se configurará un puente de red, esto con el objetivo de poder acceder a las máquinas virtuales desde la red local.</p><h1 id=\"qué-se-necesita\">¿Qué se necesita?</h1><ul>  <li>Computadora con Debian o derivada como sistema operativo y espacio suficiente para tus máquinas virtuales. (En este caso una Raspberry Pi 4, 4 GB RAM con micro sd de 64 GB).</li>  <li>Conexión de Ethernet para conectarte a la red.</li>  <li>Servidor SSH para conexión remota. (Es posible seguir la guía de forma local)</li></ul><h1 id=\"instalar-lo-necesario\">Instalar lo necesario</h1><p>En primer lugar es necesario instalar un conjunto de software para virtualizar. En este caso qemu-kvm</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>apt install qemu qemu-kvm qemu-system qemu-utils libvirt-clients libvirt-daemon-system virtinst virt-manager bridge-utils</code></pre></div></div><p>Y activamos el demonio de libvirt</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>systemctl enable libvirtd</code></pre></div></div><h1 id=\"puente-de-red\">Puente de red</h1><p>Ahora es necesario verificar nuestra conexión a la red, esto se puede conseguir con el comando</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ip a</code></pre></div></div><p><strong>Ejemplo del resultado</strong></p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000   \t\t link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\t\tinet 127.0.0.1/8 scope host lo   \t\t\tvalid_lft forever preferred_lft forever\t\tinet6 ::1/128 scope host    \t\t\tvalid_lft forever preferred_lft forever2: enp1s0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\t\tlink/ether 52:54:00:da:fd:b4 brd ff:ff:ff:ff:ff:ff\t\tinet 192.168.122.220/24 brd 192.168.122.255 scope global dynamic enp1s0   \t\t\tvalid_lft 3538sec preferred_lft 3538sec\t\tinet6 fe80::5054:ff:feda:fdb4/64 scope link    \t\t\tvalid_lft forever preferred_lft forever</code></pre></div></div><p>Desde aquí podemos verificar que la interfaz de nuestra conexión por Ethernet tiene como nombre enp1s0 y la ip es 192.168.122.220, sabiendo esto podemos crear el puente, necesitamos entrar al archivo de configuración de interfaces. En Debian es /etc/network/interfaces</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>vim /etc/network/interfaces</code></pre></div></div><p>Dentro debemos de escribir la configuración del puente, tras modificar el archivo debe quedar así (revisa la ip, gateway y el nombre de la interfaz pues pueden no ser las mismas).</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># This file describes the network interfaces available on your system# and how to activate them. For more information, see interfaces(5).source /etc/network/interfaces.d/*# The loopback network interfaceauto loiface lo inet loopback# The primary network interfaceallow-hotplug enp1s0iface enp1s0 inet staticauto br0iface br0 inet static\taddress 192.168.122.220\tnetmask 255.255.255.0\tgateway 192.168.122.1\tbridge_ports enp1s0\tup /usr/sbin/brctl stp br0 on</code></pre></div></div><p>Ya que estamos seguros de nuestra configuración, reiniciaremos para que estas configuraciones se apliquen. Al reiniciar podremos ver nuestra configuración algo así.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\t\tlink/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\t\tinet 127.0.0.1/8 scope host lo   \t\t\tvalid_lft forever preferred_lft forever\t\tinet6 ::1/128 scope host    \t\t\tvalid_lft forever preferred_lft forever2: enp1s0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast master br0 state UP group default qlen 1000\t\tlink/ether 52:54:00:da:fd:b4 brd ff:ff:ff:ff:ff:ff3: br0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default qlen 1000\t\tlink/ether da:64:e7:16:20:c8 brd ff:ff:ff:ff:ff:ff\t\tinet 192.168.122.220/24 brd 192.168.122.255 scope global br0   \t\t\tvalid_lft forever preferred_lft forever\t\tinet6 fe80::d864:e7ff:fe16:20c8/64 scope link    \t\t\tvalid_lft forever preferred_lft forever</code></pre></div></div><p>Como podemos observar, ahora nuestra conexión se encuentra en la interfaz br0 que es nuestro puente.</p><p><strong>¡Listo!</strong> Ya tenemos red, ahora podemos empezar a crear nuestras máquinas virtuales.</p><h1 id=\"creación-de-máquinas-virtuales\">Creación de máquinas virtuales</h1><p>Para poder correr una máquina virtual, en primer lugar será necesario crear un disco para la máquina virtual.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Creamos el directorio para nuestros discosmkdir kvm# Creamos el disco, es posible cambiar el nombre y el tamaño del discoqemu-img create -f qcow2 ./debian.qcow2 8G# Agregamos la configuración para conectarnos con qemu mientras usemos los comandos virt-install y virshmkdir -p ~/.config/libvirt/echo 'uri_default = \"qemu:///system\"' | tee -a ~/.config/libvirt/libvirt.conf</code></pre></div></div><p>Ya que tenemos el disco, podemos instalar el sistema operativo.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>virt-install \\\t# Nombre de la máquina   \t\t--name debian \\\t# Cantidad de memoria RAM\t\t--memory 1024 \\ \t# Ubicación del disco de la máquina virtual\t\t--disk path=./debian.qcow2,size=8,format=qcow2,bus=virtio \\\t# Número de núcleos para la maquina virtual\t\t--vcpus 1 \\\t\t--os-type linux \\\t# Variante del sistema operativo\t\t--os-variant debian10 \\\t# Nombre de la interfaz de red, en este caso br0\t\t--network bridge=br0,model=virtio \\\t# Configuración sin interfaz gráfico\t\t--graphics none \\\t\t--console pty,target_type=serial \\\t# Dirección de la instalación (cambiar la arquitectura si no usas arm64)\t\t--location 'http://ftp.debian.org/debian/dists/buster/main/installer-arm64/' \\\t\t--extra-args 'console=ttyS0,115200n8 serial'</code></pre></div></div><p>Continuamos con nuestra instalación normal y ya podemos usar la máquina virtual. Puedes aprender como administrar la máquina virtual con el comando</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>man virsh</code></pre></div></div><h1 id=\"conclusión\">Conclusión</h1><p>Crear un servidor de virtualización suele sonar más complicado de lo que es, espero que esta guía te haya sido de utilidad. :)</p><h3 id=\"algunas-fuentes\">Algunas fuentes</h3><p>Last Dragon .(2021). Configurar Debian como servidor de virtualizacion con QEMU/KVM . Video de Youtube: https://www.youtube.com/watch?v=ADqWvmDbY0o</p>",
                "url": "/blog/kvm-qemu/2021/08/17/kvm-server/",
                
                
                "categories": ["kvm-qemu"],                
                
                "date_published": "2021-08-17T00:00:00+00:00",
                "date_modified": "2021-08-17T00:00:00+00:00",
                
                "author":  "ksobrenatural" 
                
            },
        
            {
                "title": "¿Un blog?",
                "content_text": "Este es mi post de introducción, intentare responder algunas preguntas que puedes tener apartir de la existencia de este blog.¿Por qué un blog?Pense en como podría tener mis notas o mini-tutoriales, tenerlas en github puede ser útil pero no es fácil compartirlo además de que ahí no lo documento en español por lo que si quiero dirigir a alguíen a mi documentación, el tema del lenguaje lo puede complicar por lo que llegué a la conclusión de que lo mejor será realizar post esporadicamente en este medio.  El blog entero se encontrará en español, sin embargo, algunas notas pueden contener frases en inglés por las tecnologías que se ocupan.¿Qué tan seguído se publicarán post nuevos?Realmente no existirá un calendario, principalmente son notas, sin embargo, intentaré al menos publicar sobre algo interesante una vez al mes.¿Sobre qué serán los posts?Mayormente sobre tecnología, nueva y no tan nueva, mayormente del estilo no tan abstracto, tecnologías como contenedores en linux, seguridad en servidores, desplegar algún servicio, máquinas virtuales pero si tendré algunas notas sobre lenguajes de programación.",
                "content_html": "<p>Este es mi post de introducción, intentare responder algunas preguntas que puedes tener apartir de la existencia de este blog.</p><h4 id=\"por-qué-un-blog\">¿Por qué un blog?</h4><p>Pense en como podría tener mis notas o mini-tutoriales, tenerlas en github puede ser útil pero no es fácil compartirlo además de que ahí no lo documento en español por lo que si quiero dirigir a alguíen a mi documentación, el tema del lenguaje lo puede complicar por lo que llegué a la conclusión de que lo mejor será realizar post esporadicamente en este medio.</p><blockquote>  <p>El blog entero se encontrará en español, sin embargo, algunas notas pueden contener frases en inglés por las tecnologías que se ocupan.</p></blockquote><h4 id=\"qué-tan-seguído-se-publicarán-post-nuevos\">¿Qué tan seguído se publicarán post nuevos?</h4><p>Realmente no existirá un calendario, principalmente son notas, sin embargo, intentaré al menos publicar sobre algo interesante una vez al mes.</p><h4 id=\"sobre-qué-serán-los-posts\">¿Sobre qué serán los posts?</h4><p>Mayormente sobre tecnología, nueva y no tan nueva, mayormente del estilo no tan abstracto, tecnologías como contenedores en linux, seguridad en servidores, desplegar algún servicio, máquinas virtuales pero si tendré algunas notas sobre lenguajes de programación.</p>",
                "url": "/blog/personal/2021/08/07/Intro/",
                
                
                "categories": ["personal"],                
                
                "date_published": "2021-08-07T00:00:00+00:00",
                "date_modified": "2021-08-07T00:00:00+00:00",
                
                "author":  "ksobrenatural" 
                
            }
        
    ],
    "pages": [
            
            {
                "id": "404",
                "title": 404,
                "content_text": "## Página no disponible :(La página a la que intentas acceder no existe o no está disponible.> Go [back]({{site.baseurl}}/)",
                "content_html": "## Página no disponible :(La página a la que intentas acceder no existe o no está disponible.> Go [back]({{site.baseurl}}/)",
                "url": "/blog/404.html",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "usa gnu/linux",
                "title": "Usa GNU/Linux",
                "content_text": "Primero que nada, gracias por tomarte el tiempo de leer esto, la razón de esta guía es para tener un lugar a donde dirigir a amigos y familiares a los que quiero introducir al mundo de GNU/Linux y el software libre, darles a entender que en realidad no es necesario un gran conocimiento en computadoras, simplemente tener ganas de aprender. No importa si estás aquí porque estás cansado de Windows, su lentitud, sus problemas de privacidad, sus pantallas azules o sus actualizaciones en el peor momento, incluso por curiosidad propia, cualquier sea el caso, espero que esta guía te sirva de ayuda :)### Como navegar en esta guía ###Está dividida de acuerdo a un pequeño nivel de dificultad:0. [Instalación]({{site.baseurl}}/Usa-GNU-Linux/1) : Instalación de una distribución GNU/Linux.1. [Básico]({{site.baseurl}}/Usa-GNU-Linux/2) : Entendamos lo básico linux.2. [Software]({{site.baseurl}}/Usa-GNU-Linux/3) : Mantenimiento e instalación de software.3. [Extras]({{site.baseurl}}/Usa-GNU-Linux/4) : ¿Qué más puedo hacer?Esta guía puede ampliarse en algún momento, pero es recomendable investigar por tu cuenta._No tengas miedo de investigar ;)_### Ventajas del software libre ###Llevar a cabo el cambio tiene sus ventajas,* **Gratis:** no necesitas dar nada a cambio de usarlo, pero si te gusta y te gustaría apoyar, siempre puedes donar.* **Privacidad:** no cuenta con telemetría o alguna forma de recolectar tu información.* **Seguridad:** al ser de código abierto hay muchos ojos en el código, si existe un error es fácil y rápido que lo detecten y sea corregido.* **No hay virus:** por la naturaleza de Unix y el software libre es casi imposible tener virus, los sistemas más seguros como servidores o sistemas operativos basados en la red Tor como [tails](https://tails.boum.org/) tienen como base GNU/Linux.* **Conocimiento y control:** Puedes aprender y controlar absolutamente todo, si quieres puedes desactivar algún componente, cambiar el aspecto o forma de trabajar, se puede hacer básicamente todo.* **Libertad:** No te detienen ningunos términos de uso, puedes hacer lo que desees con tu computadora.#### Notas ####A lo largo de la guía llamaré linux para abreviar, pero lo correcto es llamarlo GNU/Linux pues el sistema operativo se compone tanto de las herramientas de GNU como el kernel Linux.Si encuentras un fallo ortográfico, de redacción, técnico o en general cualquier fallo, por favor, házmelo notar, si tienes cuenta de github abre un issue, de lo contrario mándame un mensaje, lo agradeceré mucho :)",
                "content_html": "Primero que nada, gracias por tomarte el tiempo de leer esto, la razón de esta guía es para tener un lugar a donde dirigir a amigos y familiares a los que quiero introducir al mundo de GNU/Linux y el software libre, darles a entender que en realidad no es necesario un gran conocimiento en computadoras, simplemente tener ganas de aprender. No importa si estás aquí porque estás cansado de Windows, su lentitud, sus problemas de privacidad, sus pantallas azules o sus actualizaciones en el peor momento, incluso por curiosidad propia, cualquier sea el caso, espero que esta guía te sirva de ayuda :)### Como navegar en esta guía ###Está dividida de acuerdo a un pequeño nivel de dificultad:0. [Instalación]({{site.baseurl}}/Usa-GNU-Linux/1) : Instalación de una distribución GNU/Linux.1. [Básico]({{site.baseurl}}/Usa-GNU-Linux/2) : Entendamos lo básico linux.2. [Software]({{site.baseurl}}/Usa-GNU-Linux/3) : Mantenimiento e instalación de software.3. [Extras]({{site.baseurl}}/Usa-GNU-Linux/4) : ¿Qué más puedo hacer?Esta guía puede ampliarse en algún momento, pero es recomendable investigar por tu cuenta._No tengas miedo de investigar ;)_### Ventajas del software libre ###Llevar a cabo el cambio tiene sus ventajas,* **Gratis:** no necesitas dar nada a cambio de usarlo, pero si te gusta y te gustaría apoyar, siempre puedes donar.* **Privacidad:** no cuenta con telemetría o alguna forma de recolectar tu información.* **Seguridad:** al ser de código abierto hay muchos ojos en el código, si existe un error es fácil y rápido que lo detecten y sea corregido.* **No hay virus:** por la naturaleza de Unix y el software libre es casi imposible tener virus, los sistemas más seguros como servidores o sistemas operativos basados en la red Tor como [tails](https://tails.boum.org/) tienen como base GNU/Linux.* **Conocimiento y control:** Puedes aprender y controlar absolutamente todo, si quieres puedes desactivar algún componente, cambiar el aspecto o forma de trabajar, se puede hacer básicamente todo.* **Libertad:** No te detienen ningunos términos de uso, puedes hacer lo que desees con tu computadora.#### Notas ####A lo largo de la guía llamaré linux para abreviar, pero lo correcto es llamarlo GNU/Linux pues el sistema operativo se compone tanto de las herramientas de GNU como el kernel Linux.Si encuentras un fallo ortográfico, de redacción, técnico o en general cualquier fallo, por favor, házmelo notar, si tienes cuenta de github abre un issue, de lo contrario mándame un mensaje, lo agradeceré mucho :)",
                "url": "/blog/Usa-GNU-Linux/",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "ksobrenatural",
                "title": "ksobrenatural",
                "content_text": "Hola, soy ksobrenatural de México.Me interesan muchas cosas en la vida, algunas de ellas son:- El uso, aprendizaje y promoción del software libre.- Ver películas y series, no todas son buenas, pero por lo menos son algo entretenidas. Una de mis series favoritas es sobrenatural, de ahí mi username.- Aprender sobre tecnologías como Bash, C, Python, Contenedores en Linux.- Experimentar con sistemas operativos.Puedes contactarme por medio de mi correo electrónico o por medio de telegram.Si deseas hacer una donación económica, aquí se encuentra mi monedero de la criptomoneda, Monero.[Mi Github](https://github.com/ksobrenat32)[Mi Correo](mailto:ksobrenatural.7r4ty@8shield.net)",
                "content_html": "Hola, soy ksobrenatural de México.Me interesan muchas cosas en la vida, algunas de ellas son:- El uso, aprendizaje y promoción del software libre.- Ver películas y series, no todas son buenas, pero por lo menos son algo entretenidas. Una de mis series favoritas es sobrenatural, de ahí mi username.- Aprender sobre tecnologías como Bash, C, Python, Contenedores en Linux.- Experimentar con sistemas operativos.Puedes contactarme por medio de mi correo electrónico o por medio de telegram.Si deseas hacer una donación económica, aquí se encuentra mi monedero de la criptomoneda, Monero.<img src=\"https://github.com/ksobrenat32/ksobrenat32/blob/main/monero.png?raw=true\" alt=\"drawing\" width=\"150\"/>[Mi Github](https://github.com/ksobrenat32)[Mi Correo](mailto:ksobrenatural.7r4ty@8shield.net)",
                "url": "/blog/about.html",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "",
                "title": null,
                "content_text": "{    \"website_title\": \"{{ site.title | xml_escape }}\",    \"website_url\": \"{{ \"/\" | absolute_url }}\",    \"posts\": [        {% for post in site.posts %}            {                \"title\": {{ post.title | jsonify }},                \"content_text\": {{ post.content | strip_html | strip_newlines | jsonify }},                \"content_html\": {{ post.content | strip_newlines | jsonify }},                \"url\": \"{{ post.url | absolute_url }}\",                {% if post.image.size > 0 %}                \"image\": {{ post.image | jsonify }},{% endif %}                {% if post.categories.size > 0 %}                \"categories\": {{ post.categories | jsonify }},{% endif %}                                {% if post.tags.size > 0 %}                \"tags\": {{ post.tags | jsonify }},{% endif %}                \"date_published\": \"{{ post.date | date_to_xmlschema }}\",                \"date_modified\": \"{{ post.date | date_to_xmlschema }}\",                {% if post.author %}                \"author\": {% if post.author.name %} \"{{ post.author.name }}\" {% else %} \"{{ post.author }}\" {% endif %}                {% else %}                \"author\": {% if site.author.name %} \"{{ site.author.name }}\" {% else %} \"{{ site.author }}\" {% endif %}                {% endif %}            }{% if forloop.last == false %},{% endif %}        {% endfor %}    ],    \"pages\": [            {% for page in site.pages %}            {                \"id\": {{page.title | downcase | jsonify}},                \"title\": {{ page.title | jsonify }},                \"content_text\": {{ page.content | strip_html | strip_newlines | jsonify }},                \"content_html\": {{ page.content | strip_newlines | jsonify }},                \"url\": \"{{ page.url | absolute_url }}\",                \"date_published\": \"{{ page.date | date_to_xmlschema }}\",                \"date_modified\": \"{{ page.date | date_to_xmlschema }}\"            }{% if forloop.last == false %},{% endif %}        {% endfor %}    ]           }",
                "content_html": "{    \"website_title\": \"{{ site.title | xml_escape }}\",    \"website_url\": \"{{ \"/\" | absolute_url }}\",    \"posts\": [        {% for post in site.posts %}            {                \"title\": {{ post.title | jsonify }},                \"content_text\": {{ post.content | strip_html | strip_newlines | jsonify }},                \"content_html\": {{ post.content | strip_newlines | jsonify }},                \"url\": \"{{ post.url | absolute_url }}\",                {% if post.image.size > 0 %}                \"image\": {{ post.image | jsonify }},{% endif %}                {% if post.categories.size > 0 %}                \"categories\": {{ post.categories | jsonify }},{% endif %}                                {% if post.tags.size > 0 %}                \"tags\": {{ post.tags | jsonify }},{% endif %}                \"date_published\": \"{{ post.date | date_to_xmlschema }}\",                \"date_modified\": \"{{ post.date | date_to_xmlschema }}\",                {% if post.author %}                \"author\": {% if post.author.name %} \"{{ post.author.name }}\" {% else %} \"{{ post.author }}\" {% endif %}                {% else %}                \"author\": {% if site.author.name %} \"{{ site.author.name }}\" {% else %} \"{{ site.author }}\" {% endif %}                {% endif %}            }{% if forloop.last == false %},{% endif %}        {% endfor %}    ],    \"pages\": [            {% for page in site.pages %}            {                \"id\": {{page.title | downcase | jsonify}},                \"title\": {{ page.title | jsonify }},                \"content_text\": {{ page.content | strip_html | strip_newlines | jsonify }},                \"content_html\": {{ page.content | strip_newlines | jsonify }},                \"url\": \"{{ page.url | absolute_url }}\",                \"date_published\": \"{{ page.date | date_to_xmlschema }}\",                \"date_modified\": \"{{ page.date | date_to_xmlschema }}\"            }{% if forloop.last == false %},{% endif %}        {% endfor %}    ]           }",
                "url": "/blog/api.json",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "blog",
                "title": "Blog",
                "content_text": "{% for post in site.posts %}{% if post.visible==1 %}{{post.title}}{%- endif -%}{%endfor%}",
                "content_html": "{% for post in site.posts %}{% if post.visible==1 %}<a href=\"{{site.baseurl}}{{post.url}}\">{{post.title}}</a>{%- endif -%}{%endfor%}",
                "url": "/blog/",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "",
                "title": null,
                "content_text": "{% if page.xsl %}{% endif %}{% assign collections = site.collections | where_exp:'collection','collection.output != false' %}{% for collection in collections %}{% assign docs = collection.docs | where_exp:'doc','doc.sitemap != false' %}{% for doc in docs %}{{ doc.url | replace:'/index.html','/' | absolute_url | xml_escape }}{% if doc.last_modified_at or doc.date %}{{ doc.last_modified_at | default: doc.date | date_to_xmlschema }}{% endif %}{% endfor %}{% endfor %}{% assign pages = site.html_pages | where_exp:'doc','doc.sitemap != false' | where_exp:'doc','doc.url != \"/404.html\"' %}{% for page in pages %}{{ page.url | replace:'/index.html','/' | absolute_url | xml_escape }}{% if page.last_modified_at %}{{ page.last_modified_at | date_to_xmlschema }}{% endif %}{% endfor %}{% assign static_files = page.static_files | where_exp:'page','page.sitemap != false' | where_exp:'page','page.name != \"404.html\"' %}{% for file in static_files %}{{ file.path | replace:'/index.html','/' | absolute_url | xml_escape }}{{ file.modified_time | date_to_xmlschema }}{% endfor %}",
                "content_html": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>{% if page.xsl %}<?xml-stylesheet type=\"text/xsl\" href=\"{{ \"/sitemap.xsl\" | absolute_url }}\"?>{% endif %}<urlset xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\" xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">{% assign collections = site.collections | where_exp:'collection','collection.output != false' %}{% for collection in collections %}{% assign docs = collection.docs | where_exp:'doc','doc.sitemap != false' %}{% for doc in docs %}<url><loc>{{ doc.url | replace:'/index.html','/' | absolute_url | xml_escape }}</loc>{% if doc.last_modified_at or doc.date %}<lastmod>{{ doc.last_modified_at | default: doc.date | date_to_xmlschema }}</lastmod>{% endif %}</url>{% endfor %}{% endfor %}{% assign pages = site.html_pages | where_exp:'doc','doc.sitemap != false' | where_exp:'doc','doc.url != \"/404.html\"' %}{% for page in pages %}<url><loc>{{ page.url | replace:'/index.html','/' | absolute_url | xml_escape }}</loc>{% if page.last_modified_at %}<lastmod>{{ page.last_modified_at | date_to_xmlschema }}</lastmod>{% endif %}</url>{% endfor %}{% assign static_files = page.static_files | where_exp:'page','page.sitemap != false' | where_exp:'page','page.name != \"404.html\"' %}{% for file in static_files %}<url><loc>{{ file.path | replace:'/index.html','/' | absolute_url | xml_escape }}</loc><lastmod>{{ file.modified_time | date_to_xmlschema }}</lastmod></url>{% endfor %}</urlset>",
                "url": "/blog/sitemap.xml",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "",
                "title": null,
                "content_text": "Sitemap: {{ \"sitemap.xml\" | absolute_url }}",
                "content_html": "Sitemap: {{ \"sitemap.xml\" | absolute_url }}",
                "url": "/blog/robots.txt",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "",
                "title": null,
                "content_text": "{% if page.xsl %}{% endif %}Jekyll{{ site.time | date_to_xmlschema }}{{ page.url | absolute_url | xml_escape }}{% assign title = site.title | default: site.name %}{% if page.collection != \"posts\" %}{% assign collection = page.collection | capitalize %}{% assign title = title | append: \" | \" | append: collection %}{% endif %}{% if page.category %}{% assign category = page.category | capitalize %}{% assign title = title | append: \" | \" | append: category %}{% endif %}{% if title %}{{ title | smartify | xml_escape }}{% endif %}{% if site.description %}{{ site.description | xml_escape }}{% endif %}{% if site.author %}{{ site.author.name | default: site.author | xml_escape }}{% if site.author.email %}{{ site.author.email | xml_escape }}{% endif %}{% if site.author.uri %}{{ site.author.uri | xml_escape }}{% endif %}{% endif %}{% assign posts = site[page.collection] | where_exp: \"post\", \"post.draft != true\" | sort: \"date\" | reverse %}{% if page.category %}{% assign posts = posts | where: \"category\",page.category %}{% endif %}{% for post in posts limit: 10 %}{{ post.title | smartify | strip_html | normalize_whitespace | xml_escape }}{{ post.date | date_to_xmlschema }}{{ post.last_modified_at | default: post.date | date_to_xmlschema }}{{ post.id | absolute_url | xml_escape }}{% assign excerpt_only = post.feed.excerpt_only | default: site.feed.excerpt_only %}{% unless excerpt_only %}{{ post.content | strip | xml_escape }}{% endunless %}{% assign post_author = post.author | default: post.authors[0] | default: site.author %}{% assign post_author = site.data.authors[post_author] | default: post_author %}{% assign post_author_email = post_author.email | default: nil %}{% assign post_author_uri = post_author.uri | default: nil %}{% assign post_author_name = post_author.name | default: post_author %}{{ post_author_name | default: \"\" | xml_escape }}{% if post_author_email %}{{ post_author_email | xml_escape }}{% endif %}{% if post_author_uri %}{{ post_author_uri | xml_escape }}{% endif %}{% if post.category %}{% endif %}{% for tag in post.tags %}{% endfor %}{% if post.excerpt and post.excerpt != empty %}{{ post.excerpt | strip_html | normalize_whitespace | xml_escape }}{% endif %}{% assign post_image = post.image.path | default: post.image %}{% if post_image %}{% unless post_image contains \"://\" %}{% assign post_image = post_image | absolute_url %}{% endunless %}{% endif %}{% endfor %}",
                "content_html": "<?xml version=\"1.0\" encoding=\"utf-8\"?>{% if page.xsl %}<?xml-stylesheet type=\"text/xml\" href=\"{{ '/feed.xslt.xml' | absolute_url }}\"?>{% endif %}<feed xmlns=\"http://www.w3.org/2005/Atom\" {% if site.lang %}xml:lang=\"{{ site.lang }}\"{% endif %}><generator uri=\"https://jekyllrb.com/\" version=\"{{ jekyll.version }}\">Jekyll</generator><link href=\"{{ page.url | absolute_url }}\" rel=\"self\" type=\"application/atom+xml\" /><link href=\"{{ '/' | absolute_url }}\" rel=\"alternate\" type=\"text/html\" {% if site.lang %}hreflang=\"{{ site.lang }}\" {% endif %}/><updated>{{ site.time | date_to_xmlschema }}</updated><id>{{ page.url | absolute_url | xml_escape }}</id>{% assign title = site.title | default: site.name %}{% if page.collection != \"posts\" %}{% assign collection = page.collection | capitalize %}{% assign title = title | append: \" | \" | append: collection %}{% endif %}{% if page.category %}{% assign category = page.category | capitalize %}{% assign title = title | append: \" | \" | append: category %}{% endif %}{% if title %}<title type=\"html\">{{ title | smartify | xml_escape }}</title>{% endif %}{% if site.description %}<subtitle>{{ site.description | xml_escape }}</subtitle>{% endif %}{% if site.author %}<author><name>{{ site.author.name | default: site.author | xml_escape }}</name>{% if site.author.email %}<email>{{ site.author.email | xml_escape }}</email>{% endif %}{% if site.author.uri %}<uri>{{ site.author.uri | xml_escape }}</uri>{% endif %}</author>{% endif %}{% assign posts = site[page.collection] | where_exp: \"post\", \"post.draft != true\" | sort: \"date\" | reverse %}{% if page.category %}{% assign posts = posts | where: \"category\",page.category %}{% endif %}{% for post in posts limit: 10 %}<entry{% if post.lang %}{{\" \"}}xml:lang=\"{{ post.lang }}\"{% endif %}><title type=\"html\">{{ post.title | smartify | strip_html | normalize_whitespace | xml_escape }}</title><link href=\"{{ post.url | absolute_url }}\" rel=\"alternate\" type=\"text/html\" title=\"{{ post.title | xml_escape }}\" /><published>{{ post.date | date_to_xmlschema }}</published><updated>{{ post.last_modified_at | default: post.date | date_to_xmlschema }}</updated><id>{{ post.id | absolute_url | xml_escape }}</id>{% assign excerpt_only = post.feed.excerpt_only | default: site.feed.excerpt_only %}{% unless excerpt_only %}<content type=\"html\" xml:base=\"{{ post.url | absolute_url | xml_escape }}\">{{ post.content | strip | xml_escape }}</content>{% endunless %}{% assign post_author = post.author | default: post.authors[0] | default: site.author %}{% assign post_author = site.data.authors[post_author] | default: post_author %}{% assign post_author_email = post_author.email | default: nil %}{% assign post_author_uri = post_author.uri | default: nil %}{% assign post_author_name = post_author.name | default: post_author %}<author><name>{{ post_author_name | default: \"\" | xml_escape }}</name>{% if post_author_email %}<email>{{ post_author_email | xml_escape }}</email>{% endif %}{% if post_author_uri %}<uri>{{ post_author_uri | xml_escape }}</uri>{% endif %}</author>{% if post.category %}<category term=\"{{ post.category | xml_escape }}\" />{% endif %}{% for tag in post.tags %}<category term=\"{{ tag | xml_escape }}\" />{% endfor %}{% if post.excerpt and post.excerpt != empty %}<summary type=\"html\">{{ post.excerpt | strip_html | normalize_whitespace | xml_escape }}</summary>{% endif %}{% assign post_image = post.image.path | default: post.image %}{% if post_image %}{% unless post_image contains \"://\" %}{% assign post_image = post_image | absolute_url %}{% endunless %}<media:thumbnail xmlns:media=\"http://search.yahoo.com/mrss/\" url=\"{{ post_image | xml_escape }}\" /><media:content medium=\"image\" url=\"{{ post_image | xml_escape }}\" xmlns:media=\"http://search.yahoo.com/mrss/\" />{% endif %}</entry>{% endfor %}</feed>",
                "url": "/blog/feed.xml",
                "date_published": "",
                "date_modified": ""
            }
        
    ]           
}