<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="/blog/" rel="alternate" type="text/html" /><updated>2021-09-25T04:12:06+00:00</updated><id>/blog/feed.xml</id><title type="html">Mi blog</title><author><name>ksobrenatural</name><email>ksobrenatural.7r4ty@8shield.net</email></author><entry><title type="html">Servidor de virtualización en Raspberry Pi 4</title><link href="/blog/kvm-qemu/2021/08/17/kvm-server/" rel="alternate" type="text/html" title="Servidor de virtualización en Raspberry Pi 4" /><published>2021-08-17T00:00:00+00:00</published><updated>2021-08-17T00:00:00+00:00</updated><id>/blog/kvm-qemu/2021/08/17/kvm-server</id><content type="html" xml:base="/blog/kvm-qemu/2021/08/17/kvm-server/">&lt;h1 id=&quot;introducción&quot;&gt;Introducción&lt;/h1&gt;

&lt;p&gt;Hola! En este post voy a explicar como tener un servidor de virtualización en una Raspberry Pi 4, aunque estas instrucciones no son exclusivas de la Raspberry pues se puede conseguir lo mismo en cualquier Hardware que tenga instalado GNU/Linux.&lt;/p&gt;

&lt;p&gt;La utilidad de un servidor de virtualización es básicamente infinita, puedes emular cualquier Hardware ya sea para probar distintos sistemas operativos o para aislar distintos servicios. En este caso al ser un Hardware relativamente débil y con poca memoria, como lo es la Raspberry Pi 4, no será posible correr múltiples máquinas virtuales.&lt;/p&gt;

&lt;p&gt;Además del servidor de virtualización, se configurará un puente de red, esto con el objetivo de poder acceder a las máquinas virtuales desde la red local.&lt;/p&gt;

&lt;h1 id=&quot;qué-se-necesita&quot;&gt;¿Qué se necesita?&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Computadora con Debian o derivada como sistema operativo y espacio suficiente para tus máquinas virtuales. (En este caso una Raspberry Pi 4, 4 GB RAM con micro sd de 64 GB).&lt;/li&gt;
  &lt;li&gt;Conexión de Ethernet para conectarte a la red.&lt;/li&gt;
  &lt;li&gt;Servidor SSH para conexión remota. (Es posible seguir la guía de forma local)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;instalar-lo-necesario&quot;&gt;Instalar lo necesario&lt;/h1&gt;

&lt;p&gt;En primer lugar es necesario instalar un conjunto de software para virtualizar. En este caso qemu-kvm&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt install qemu qemu-kvm qemu-system qemu-utils libvirt-clients libvirt-daemon-system virtinst virt-manager bridge-utils
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Y activamos el demonio de libvirt&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl enable libvirtd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;puente-de-red&quot;&gt;Puente de red&lt;/h1&gt;

&lt;p&gt;Ahora es necesario verificar nuestra conexión a la red, esto se puede conseguir con el comando&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ip a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Ejemplo del resultado&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
   		 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
		inet 127.0.0.1/8 scope host lo
   			valid_lft forever preferred_lft forever
		inet6 ::1/128 scope host 
   			valid_lft forever preferred_lft forever
2: enp1s0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
		link/ether 52:54:00:da:fd:b4 brd ff:ff:ff:ff:ff:ff
		inet 192.168.122.220/24 brd 192.168.122.255 scope global dynamic enp1s0
   			valid_lft 3538sec preferred_lft 3538sec
		inet6 fe80::5054:ff:feda:fdb4/64 scope link 
   			valid_lft forever preferred_lft forever
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Desde aquí podemos verificar que la interfaz de nuestra conexión por Ethernet tiene como nombre enp1s0 y la ip es 192.168.122.220, sabiendo esto podemos crear el puente, necesitamos entrar al archivo de configuración de interfaces. En Debian es /etc/network/interfaces&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim /etc/network/interfaces
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dentro debemos de escribir la configuración del puente, tras modificar el archivo debe quedar así (revisa la ip, gateway y el nombre de la interfaz pues pueden no ser las mismas).&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
allow-hotplug enp1s0
iface enp1s0 inet static

auto br0
iface br0 inet static
	address 192.168.122.220
	netmask 255.255.255.0
	gateway 192.168.122.1
	bridge_ports enp1s0
	up /usr/sbin/brctl stp br0 on
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ya que estamos seguros de nuestra configuración, reiniciaremos para que estas configuraciones se apliquen. Al reiniciar podremos ver nuestra configuración algo así.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
		link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
		inet 127.0.0.1/8 scope host lo
   			valid_lft forever preferred_lft forever
		inet6 ::1/128 scope host 
   			valid_lft forever preferred_lft forever
2: enp1s0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc pfifo_fast master br0 state UP group default qlen 1000
		link/ether 52:54:00:da:fd:b4 brd ff:ff:ff:ff:ff:ff
3: br0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc noqueue state UP group default qlen 1000
		link/ether da:64:e7:16:20:c8 brd ff:ff:ff:ff:ff:ff
		inet 192.168.122.220/24 brd 192.168.122.255 scope global br0
   			valid_lft forever preferred_lft forever
		inet6 fe80::d864:e7ff:fe16:20c8/64 scope link 
   			valid_lft forever preferred_lft forever
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Como podemos observar, ahora nuestra conexión se encuentra en la interfaz br0 que es nuestro puente.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¡Listo!&lt;/strong&gt; Ya tenemos red, ahora podemos empezar a crear nuestras máquinas virtuales.&lt;/p&gt;

&lt;h1 id=&quot;creación-de-máquinas-virtuales&quot;&gt;Creación de máquinas virtuales&lt;/h1&gt;

&lt;p&gt;Para poder correr una máquina virtual, en primer lugar será necesario crear un disco para la máquina virtual.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Creamos el directorio para nuestros discos
mkdir kvm

# Creamos el disco, es posible cambiar el nombre y el tamaño del disco
qemu-img create -f qcow2 ./debian.qcow2 8G

# Agregamos la configuración para conectarnos con qemu mientras usemos los comandos virt-install y virsh
mkdir -p ~/.config/libvirt/
echo 'uri_default = &quot;qemu:///system&quot;' | tee -a ~/.config/libvirt/libvirt.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ya que tenemos el disco, podemos instalar el sistema operativo.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;virt-install \
	# Nombre de la máquina
   		--name debian \
	# Cantidad de memoria RAM
		--memory 1024 \ 
	# Ubicación del disco de la máquina virtual
		--disk path=./debian.qcow2,size=8,format=qcow2,bus=virtio \
	# Número de núcleos para la maquina virtual
		--vcpus 1 \
		--os-type linux \
	# Variante del sistema operativo
		--os-variant debian10 \
	# Nombre de la interfaz de red, en este caso br0
		--network bridge=br0,model=virtio \
	# Configuración sin interfaz gráfico
		--graphics none \
		--console pty,target_type=serial \
	# Dirección de la instalación (cambiar la arquitectura si no usas arm64)
		--location 'http://ftp.debian.org/debian/dists/buster/main/installer-arm64/' \
		--extra-args 'console=ttyS0,115200n8 serial'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Continuamos con nuestra instalación normal y ya podemos usar la máquina virtual. Puedes aprender como administrar la máquina virtual con el comando&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;man virsh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h1&gt;

&lt;p&gt;Crear un servidor de virtualización suele sonar más complicado de lo que es, espero que esta guía te haya sido de utilidad. :)&lt;/p&gt;

&lt;h3 id=&quot;algunas-fuentes&quot;&gt;Algunas fuentes&lt;/h3&gt;

&lt;p&gt;Last Dragon .(2021). Configurar Debian como servidor de virtualizacion con QEMU/KVM . Video de Youtube: https://www.youtube.com/watch?v=ADqWvmDbY0o&lt;/p&gt;</content><author><name>[&quot;ksobrenatural&quot;]</name></author><summary type="html">Introducción</summary></entry><entry><title type="html">¿Un blog?</title><link href="/blog/personal/2021/08/07/Intro/" rel="alternate" type="text/html" title="¿Un blog?" /><published>2021-08-07T00:00:00+00:00</published><updated>2021-08-07T00:00:00+00:00</updated><id>/blog/personal/2021/08/07/Intro</id><content type="html" xml:base="/blog/personal/2021/08/07/Intro/">&lt;p&gt;Este es mi post de introducción, intentare responder algunas preguntas que puedes tener apartir de la existencia de este blog.&lt;/p&gt;

&lt;h4 id=&quot;por-qué-un-blog&quot;&gt;¿Por qué un blog?&lt;/h4&gt;
&lt;p&gt;Pense en como podría tener mis notas o mini-tutoriales, tenerlas en github puede ser útil pero no es fácil compartirlo además de que ahí no lo documento en español por lo que si quiero dirigir a alguíen a mi documentación, el tema del lenguaje lo puede complicar por lo que llegué a la conclusión de que lo mejor será realizar post esporadicamente en este medio.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;El blog entero se encontrará en español, sin embargo, algunas notas pueden contener frases en inglés por las tecnologías que se ocupan.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;qué-tan-seguído-se-publicarán-post-nuevos&quot;&gt;¿Qué tan seguído se publicarán post nuevos?&lt;/h4&gt;
&lt;p&gt;Realmente no existirá un calendario, principalmente son notas, sin embargo, intentaré al menos publicar sobre algo interesante una vez al mes.&lt;/p&gt;

&lt;h4 id=&quot;sobre-qué-serán-los-posts&quot;&gt;¿Sobre qué serán los posts?&lt;/h4&gt;
&lt;p&gt;Mayormente sobre tecnología, nueva y no tan nueva, mayormente del estilo no tan abstracto, tecnologías como contenedores en linux, seguridad en servidores, desplegar algún servicio, máquinas virtuales pero si tendré algunas notas sobre lenguajes de programación.&lt;/p&gt;</content><author><name>[&quot;ksobrenatural&quot;]</name></author><summary type="html">Este es mi post de introducción, intentare responder algunas preguntas que puedes tener apartir de la existencia de este blog.</summary></entry></feed>