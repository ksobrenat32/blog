<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="/blog/" rel="alternate" type="text/html" /><updated>2021-12-18T20:55:33+00:00</updated><id>/blog/feed.xml</id><title type="html">Mi blog</title><author><name>ksobrenatural</name><email>ksobrenatural.7r4ty@8shield.net</email></author><entry><title type="html">Servidor de minecraft</title><link href="/blog/games/2021/12/18/minecraft-server" rel="alternate" type="text/html" title="Servidor de minecraft" /><published>2021-12-18T00:00:00+00:00</published><updated>2021-12-18T00:00:00+00:00</updated><id>/blog/games/2021/12/18/minecraft-server</id><content type="html" xml:base="/blog/games/2021/12/18/minecraft-server">&lt;h2 id=&quot;introducción&quot;&gt;Introducción&lt;/h2&gt;

&lt;p&gt;A la mayoría de personas que conozco les gusta jugar
 minecraft, es un juego increible, pero pocos saben
 lo sencillo que es correr su propio servidor.&lt;/p&gt;

&lt;p&gt;El este post explicaré como crear un servidor de
 minecraft, usaremos el servidor modicado
 &lt;a href=&quot;https://papermc.io/&quot;&gt;paper&lt;/a&gt; para poder usar los
 pulugins que permiten jugar juntos a java y bedrock
 aunque no hay que olvidar que el servidor sigue
 siendo de java por lo que las dinamicas del juego
 como las granjas siguen siendo de Java.&lt;/p&gt;

&lt;h2 id=&quot;qué-es-un-servidor-de-minecraft&quot;&gt;¿Qué es un servidor de minecraft?&lt;/h2&gt;

&lt;p&gt;Un servidor no es mas que una computadora, en este
 caso corriendo minecraft. Aunque la administración
 de un servidor parece complicada, haciendolo bien
 la primera vez es fácil repetirlo.&lt;/p&gt;

&lt;p&gt;El programa que correremos como servidor de minecraft
 no es el original proporcionado por mojang pues ese
 no permite el uso de pluggins además de que paper
 tiene optimizaciones para volverlo mas ligero a
 cambio de unas diferencias en unas dinamicas que
 es dificil notar, en caso de que quieras una
 experiencia 100% vanilla y no necesitas compatibilidad
 con bedrock, puedes usar el ejecutable proporcionado
 por mojang.&lt;/p&gt;

&lt;h2 id=&quot;requerimientos&quot;&gt;Requerimientos&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Una computadora con GNU/Linux donde vayas a correr
 el servidor, en este caso será en Azure* con la
 distribución Debian 11.&lt;/li&gt;
  &lt;li&gt;Amigos (jajaj si no para que crear un servidor).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;* Si eres estudiante y tu universidad tiene alguna
 afiliación con Microsoft, es posible que seas candidato
 a &lt;a href=&quot;https://azure.microsoft.com/en-us/free/students/&quot;&gt;azure for students&lt;/a&gt;
 en donde puedes obtener 100 dolares gratis al año que
 puedes usar para correr tu servidor por al menos 3 meses
 con el plan B2s, planenado rotar el servidor entre la
 cuenta de tus amigos puedes correrlo teoricamente para siempre.&lt;/p&gt;

&lt;h2 id=&quot;configura-servidor&quot;&gt;Configura servidor&lt;/h2&gt;

&lt;h3 id=&quot;1--entra-al-servidor-con-ssh&quot;&gt;1- Entra al servidor con ssh&lt;/h3&gt;

&lt;p&gt;Esto ya es otro tema mas extenso de lo que va con esta guía,
 pero a grandes rasgos en cualquier Sistema Operativo debes
 poder correr en la terminal:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh usuario@1.1.1.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Te recomiendo usar solamente claves de ssh y cambiar la
 configuración a no permitir el uso de contraseñas además
 de cambiar el puerto para evitar lo mas posible el ataque
 de bots. Te puedes guiar de &lt;a href=&quot;https://github.com/ksobrenat32/notes/blob/main/ssh/sshd_config&quot;&gt;mi configuración&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;2--configura-el-firewall&quot;&gt;2- Configura el firewall&lt;/h3&gt;

&lt;p&gt;Esto igual dependerá de tu provedor si lo estas corriendo
 localmente te recomiendo investigar como hacer port
 forwarding desde tu router, si es desde un probedor como
 azure verifica la configuración de red.&lt;/p&gt;

&lt;p&gt;Los puertos que es necesario abrir son:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Bedrock&lt;/th&gt;
      &lt;th&gt;Java&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;19132/udp&lt;/td&gt;
      &lt;td&gt;25565/udp&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;19132/tcp&lt;/td&gt;
      &lt;td&gt;25565/tcp&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Además no olvides el puerto que uses para ssh, usa el
 protocolo tcp.&lt;/p&gt;

&lt;h3 id=&quot;3--crea-la-estructura-y-prepara-la-configuración&quot;&gt;3- Crea la estructura y prepara la configuración&lt;/h3&gt;

&lt;p&gt;En linux siempre es mejor correr los programas con el menor
 privilegio, en este caso lo mejor es crear un usuario exclusivo
 para correr el servidor. Esto se consigue con:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo useradd -d /opt/minecraft/ -s /sbin/nologin -u 1635 minecraft
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A partir de ahí creamos los directorios y hacemos dueño al
 usuario que acabamos de crear.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo mkdir /opt/minecraft
chown -R minecraft: /opt/minecraft
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;4--instalar-lo-necesario&quot;&gt;4- Instalar lo necesario&lt;/h3&gt;

&lt;p&gt;El servidor ocupa una forma de correr java además de
 una forma de descargar archivos de red, se puede instalar
 con:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt install openjdk-17-jdk wget build-essential git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;5--descargar-lo-necesario-e-instalar-el-servidor&quot;&gt;5- Descargar lo necesario e instalar el servidor&lt;/h3&gt;

&lt;p&gt;En primer lugar debemos de entrar como el usuario que creamos.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo -u minecraft bash
cd
pwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Si todo esta bien, la respuesta al comando pwd será
 /opt/minecraft.&lt;/p&gt;

&lt;p&gt;Ahora crearemos varios directorios para mejor organización&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir downloads server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Empezaremos a descargar lo necesario&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd downloads
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Debes de bajar las ultimas versiones de:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://papermc.io/downloads&quot;&gt;paper&lt;/a&gt; : La ultima versión&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ci.opencollab.dev//job/GeyserMC/job/Geyser/job/master/&quot;&gt;geyser&lt;/a&gt; :
 La versión “Geyser-Spigot.jar”&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ci.opencollab.dev/job/GeyserMC/job/Floodgate/job/master/&quot;&gt;floodgate&lt;/a&gt; :
 La versión “floodgate-spigot.jar”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para bajarlo directamente en el servidor da click izquierdo
 y copia la url. Ya teniendolo lo puedes descargar con wget,
 ejemplo:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget https://papermc.io/api/v2/projects/paper/versions/1.18.1/builds/81/downloads/paper-1.18.1-81.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Regresa a /opt/minecraft/server y crea los links, recuerda
 haber descargado la última versión.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /opt/minecraft/server
ln -s ../downloads/paper-1.18.1-81.jar paper-server.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Y ya podemos correr el servidor por primera vez con:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java -jar paper-jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Hubo un error, claro, es por que no has aceptado los
 terminos y condiciones, debes entrar al archivo
 eula.txt y cambiar de false a true, se puede hacer
 con el editor de texto nano.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nano eula.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ahora si, vuelve a correr el comando anterior. Puedes
 probar si puedes ingresar pero de momento no podran
 ingresar usuarios de java, para esto debemos configurar
 los links a geyser y floodgate. En primer lugar para
 detener el servidor se hace oprimiendo ctrl+c.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /opt/minecraft/server/plugins
ln -s ../../downloads/Geyser-Spigot.jar .
ln -s ../../downloads/floodgate-Spigot.jar .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Se va a tener que modificat la configuración de geyser
 para que use floodgete, en el archivo /opt/minecraft/
server/server/plugins/Geyser-Spigot/config.yml la linea
 que debes cambiar es.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;auth-type: floodgate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vuelve a correr el servidor&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /opt/minecraft/server
java -jar paper-jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Deberas ver como inicia tanto Geyser como floodgate inician.
 Como podras ver no es practico tener que estarlo iniciando
 y perder el acceso a la terminal por lo que configuraremos
 el rcon, en primer lugar activalo y ponle una contraseña.
 Esto es desde el archivo server.propierties, las lineas:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rcon.port=25575
broadcast-rcon-to-ops=true
enable-rcon=true
rcon.password=UnaContraseñaSuperSegura
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ahora debemos descargar un cliente de rcon.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /opt/minecraft
git clone https://github.com/Tiiffi/mcrcon
cd mcrcon
make
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Listo, abre otra conección con ssh para correr el servidor y
 en la otra terminal:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/opt/mcrcon/mcrcon -H 127.0.0.1 -P 25575 -p UnaContraseñaSuperSegura
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Esto como ves, da acceso a la administración del servidor,
 bueno, ya que vemos que todo funciona es momento de automatizar,
 ya puedes salir del usuario minecraft.&lt;/p&gt;

&lt;h3 id=&quot;6--marcarlo-como-servicio&quot;&gt;6- Marcarlo como servicio&lt;/h3&gt;

&lt;p&gt;Para hacer que minecraft inicie junto al servidor, es necesario
 crear  un servicio, en este caso en el archivo
 /etc/systemd/system/minecraft-server.service y pegaremos lo
 siguiente&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Unit]
Description=Minecraft Server (Powered by paper)
After=network.target

[Service]
User=minecraft
ExecStart=/usr/bin/java -Xmx4096M -Xms512M -jar paper-server.jar nogui
ExecStop=/opt/minecraft/mcrcon/mcrcon -H 127.0.0.1 -P 25575 -p UnaContraseñaSuperSegura stop
WorkingDirectory=/opt/minecraft/server
Nice=1
KillMode=none
SuccessExitStatus=0 1
ProtectHome=true
ProtectSystem=full
PrivateDevices=true
NoNewPrivileges=true

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Cambiando tanto la contraseña como el valor de -Xmx al
 valor de RAM máxima que queremos asignar al servidor.&lt;/p&gt;

&lt;p&gt;Iniciamos el servicio con&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl enable --now minecraft-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Y listo, el servidor corre como servicio, puedes cerrar
 todas las terminales y veras que el servidor corre sin
 problemas. Para acceder la unica forma es con rcon:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/opt/mcrcon/mcrcon -H 127.0.0.1 -P 25575 -p UnaContraseñaSuperSegura
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;notas&quot;&gt;Notas&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Es 100% recomendable idear una forma de respaldo, de
 preferencia diario.&lt;/li&gt;
  &lt;li&gt;Es igualmente recomendable reiniciar el servidor al
 menos una vez al día.&lt;/li&gt;
  &lt;li&gt;Recuerda actualizar constantemente el servidor, fallas
 como log4j surgen seguido.&lt;/li&gt;
  &lt;li&gt;Hay mas formas de optimizar el server pero eso ya
 es muy personalizado y fuera de esta guía.&lt;/li&gt;
  &lt;li&gt;Te recomiendo tener un firewall aparte del que te
 proporcione tu router o el servicio de nube que uses.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;

&lt;p&gt;Un servidor de minecraft es un proyecto muy divertido para
 convivir con amigos, solo recuerda que al ser un servicio
 expuesto a internet siempre es posible que lo comprometan
 ten mucho cuidado.&lt;/p&gt;</content><author><name>[&quot;ksobrenatural&quot;]</name></author><summary type="html">Introducción</summary></entry><entry><title type="html">Servidor de lxc en Debian</title><link href="/blog/container/2021/12/16/lxc-server" rel="alternate" type="text/html" title="Servidor de lxc en Debian" /><published>2021-12-16T00:00:00+00:00</published><updated>2021-12-16T00:00:00+00:00</updated><id>/blog/container/2021/12/16/lxc-server</id><content type="html" xml:base="/blog/container/2021/12/16/lxc-server">&lt;h2 id=&quot;introducción&quot;&gt;Introducción&lt;/h2&gt;

&lt;p&gt;Hace tiempo hice una guía para crear un servidor de virtualización,
 pero me dí cuenta que muchas veces no ocupamos una maquina virtual
 entera, su disco, ram y cpu asignado puede llegar a ser mas de lo
 que ocupamos. Además de que después de un tiempo, las imágenes de
 disco aumentan mucho de tamaño. Para estos casos existen los
 contenedores.&lt;/p&gt;

&lt;p&gt;En esta guía explicaré como correr contenedores lxc en Debian 11,
 además de configurar el puente de red para que los contenedores
 puedan acceder a la red local.&lt;/p&gt;

&lt;h2 id=&quot;qué-es-un-contenedor&quot;&gt;¿Qué es un contenedor?&lt;/h2&gt;

&lt;p&gt;Los contenedores son simplemente procesos corriendo en el host, se
 puede decir que son una especie de
 &lt;a href=&quot;https://man7.org/linux/man-pages/man2/chroot.2.html&quot;&gt;chroot&lt;/a&gt; con
 esteroides.&lt;/p&gt;

&lt;p&gt;Los contenedores mas conocidos son los que se manipulan con
 &lt;a href=&quot;https://www.docker.com/&quot;&gt;docker&lt;/a&gt; o &lt;a href=&quot;https://podman.io/&quot;&gt;podman&lt;/a&gt;,
 sin embargo, estos se plantean para un solo proceso, comúnmente
 una aplicación web, que se ve como algo sin importancia pues siempre
 se puede borrar y crear otro rápidamente y sin mayor problema,
 pero que tal si queremos el sistema operativo entero, con todo y su
 init, pues para eso existe &lt;a href=&quot;https://en.wikipedia.org/wiki/LXC&quot;&gt;lxc&lt;/a&gt;
 que trata a los contenedores mas como máquinas virtuales, sin dejar
 de ser ligero pues sigue usando el mismo kernel que con la ayuda de
 la combinación de &lt;a href=&quot;https://en.wikipedia.org/wiki/Cgroups&quot;&gt;cgroups&lt;/a&gt;
 y &lt;a href=&quot;https://en.wikipedia.org/wiki/Linux_namespaces&quot;&gt;namespaces&lt;/a&gt;
 consigue aislar los procesos completamente además de poder correr
 rootless.&lt;/p&gt;

&lt;h2 id=&quot;requerimientos&quot;&gt;Requerimientos&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Computadora con Debian o derivada.&lt;/li&gt;
  &lt;li&gt;Conexión de Ethernet directa (Para el puente de red)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;instalar-lo-necesario&quot;&gt;Instalar lo necesario&lt;/h2&gt;

&lt;p&gt;En primer lugar es necesario instalar lo necesario para correr
 los contenedores y crear el puente.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install lxc libvirt0 bridge-utils uidmap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;puente-de-red&quot;&gt;Puente de red&lt;/h2&gt;

&lt;p&gt;Ahora es necesario verificar nuestra conexión a la red, esto se
 puede conseguir con el comando.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ip a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ejemplo del resultado:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
     valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
     valid_lft forever preferred_lft forever
2: enp1s0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
    link/ether 52:54:00:da:fd:b4 brd ff:ff:ff:ff:ff:ff
    inet 192.168.122.220/24 brd 192.168.122.255 scope global dynamic enp1s0
     valid_lft 3538sec preferred_lft 3538sec
    inet6 fe80::5054:ff:feda:fdb4/64 scope link 
     valid_lft forever preferred_lft forever
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Desde aquí podemos verificar que la interfaz de nuestra conexión
 por Ethernet tiene como nombre enp1s0 y la ip es 192.168.122.220,
 sabiendo esto podemos crear el puente, necesitamos entrar al archivo
 de configuración de interfaces. En Debian es /etc/network/interfaces&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim /etc/network/interfaces
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dentro debemos de escribir la configuración del puente, tras modificar
 el archivo debe quedar así (revisa la ip, gateway y el nombre de la
 interfaz pues pueden no ser las mismas).&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
allow-hotplug enp1s0
iface enp1s0 inet static

auto br0
iface br0 inet static
    address 192.168.122.220
    netmask 255.255.255.0
    gateway 192.168.122.1
    bridge_ports enp1s0
    up /usr/sbin/brctl stp br0 on
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ya que estamos seguros de nuestra configuración, reiniciaremos para
 que estas configuraciones se apliquen. Al reiniciar podremos ver
 nuestra configuración algo así.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
     link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
     inet 127.0.0.1/8 scope host lo
      valid_lft forever preferred_lft forever
     inet6 ::1/128 scope host 
      valid_lft forever preferred_lft forever
2: enp1s0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc pfifo_fast master br0 state UP group default qlen 1000
     link/ether 52:54:00:da:fd:b4 brd ff:ff:ff:ff:ff:ff
3: br0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc noqueue state UP group default qlen 1000
     link/ether da:64:e7:16:20:c8 brd ff:ff:ff:ff:ff:ff
     inet 192.168.122.220/24 brd 192.168.122.255 scope global br0
      valid_lft forever preferred_lft forever
     inet6 fe80::d864:e7ff:fe16:20c8/64 scope link 
      valid_lft forever preferred_lft forever
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Como podemos observar, ahora nuestra conexión se encuentra en la
 interfaz br0 que es nuestro puente.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¡Listo!&lt;/strong&gt; Ya tenemos red, ahora podemos empezar a crear nuestros
 contenedores con lxc.&lt;/p&gt;

&lt;h2 id=&quot;configuración-de-lxc&quot;&gt;Configuración de lxc&lt;/h2&gt;

&lt;p&gt;Para correr contenedores sin root (lo mejor), debemos de revisar
 algunas cosas, en primer lugar, asegurarnos que este habilitado
 la función en el kernel.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo sysctl kernel.unprivileged_userns_clone
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Si es igual a 1, es que esta habilitado. En segundo lugar debemos
 verificar que nuestro usuario tenga asignadas las uid y gid,
 esto se hace con.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat /etc/s*id|grep $USER
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Debe de salir algo como&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;usuario:100000:65536
usuario:100000:65536
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Si todo es correcto, ahora modificaremos la configuración de lxc
 en /etc/lxc/default.conf debe de estar así:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Configurar el mapeo de uid y gid 
lxc.idmap = u 0 100000 65536
lxc.idmap = g 0 100000 65536

# Configuración de red
# Tipo veth para referirse a un puente de red
lxc.net.0.type = veth
# La interfaz de puente que creamos antes
lxc.net.0.link = br0
# Activar la red
lxc.net.0.flags = up

# Capacidades de los contenedores
# Configuración para apparmor, usar cgroups y namespaces.
lxc.apparmor.profile = lxc-container-default-cgns
# Capacidad de crear contenedores dentro del mismo contenedor.
# Cambia a 1 si deseas activarlo.
lxc.apparmor.allow_nesting = 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Para la red se repite la declaración del archivo default.conf,
 además añádiendo un límite a la cantidad de conecciones del 
 usuario, el archivo /etc/lxc/lxc-usernet debe de verse así:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;usuario veth br0 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Por último debemos de agregar una variable de ambiente, esto
 se puede hacer en el .bashrc del usuario, debemos agregar:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export DOWNLOAD_KEYSERVER=&quot;hkp://keyserver.ubuntu.com&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;¡Listo!&lt;/p&gt;

&lt;h2 id=&quot;cómo-usar-contenedores-lxc&quot;&gt;¿Cómo usar contenedores lxc?&lt;/h2&gt;

&lt;p&gt;Como se mencionó al inicio, hicimos la configuración para
 correr contenedores rootless por lo que estos comandos se
 deben correr como usuario.&lt;/p&gt;

&lt;h3 id=&quot;crear-un-contenedor&quot;&gt;Crear un contenedor&lt;/h3&gt;

&lt;p&gt;Para usar un contenedor primero lo debemos de generar a partir
 de una plantilla, en este caso la plantilla “download” y se
 le asigna un nombre para identificarlo. La plantilla download
 es especial, te permitirá crear un contenedor a partir de
 varias distribuciones, escoge la que más te convenga.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lxc-create --name test -t download
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;manipular-el-contenedor&quot;&gt;Manipular el contenedor&lt;/h3&gt;

&lt;p&gt;Para iniciar el contenedor en modo no privilegiado:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lxc-unpriv-start test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Para obtener un shell dentro:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lxc-unpriv-attach test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Para detener el contenedor:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lxc-stop test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;dudas&quot;&gt;Dudas&lt;/h2&gt;

&lt;h3 id=&quot;no-tengo-red&quot;&gt;No tengo red&lt;/h3&gt;

&lt;p&gt;Al tener que conectarse a la red local, al contenedor le toma
 algo de tiempo recibir una ip, ten paciencia y probablemente
 se resuelva.&lt;/p&gt;

&lt;h3 id=&quot;me-marca-un-error-en-la-llave-gpg&quot;&gt;Me marca un error en la llave gpg&lt;/h3&gt;

&lt;p&gt;Para eso es la variable que exportamos, sal y vuelve a entrar
 para que se cargue correctamente.&lt;/p&gt;

&lt;h3 id=&quot;error-en-la-configuración&quot;&gt;Error en la configuración&lt;/h3&gt;

&lt;p&gt;Algunas veces se queja por no tener una configuración individual
 del usuario, configurala en $HOME/.config/lxc/default.conf ,
 debe llevar básicamente lo mismo que la configuración global.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lxc.include = /etc/lxc/default.conf
lxc.idmap = u 0 100000 65536
lxc.idmap = g 0 100000 65536
 
lxc.net.0.type = veth
lxc.net.0.link = br0
lxc.net.0.flags = up

lxc.apparmor.profile = lxc-container-default-cgns
lxc.apparmor.allow_nesting = 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;dónde-se-almacena-el-contenedor&quot;&gt;¿Dónde se almacena el contenedor?&lt;/h3&gt;

&lt;p&gt;Los contenedores se almacenan en $HOME/.local/share/lxc en caso
 de querer modificar su ubicación se puede hacer desde la
 configuración individual de cada contenedor, en mi caso prefiero
 hacer un soft link al directorio donde lo quiero.&lt;/p&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;

&lt;p&gt;Las máquinas virtuales son muy útiles pero muchas veces son mas
 de lo que necesitamos, por lo que para la mayoría de casos un
 contenedor lxc es mucho mas útil. Solo recuerda que no es el
 mismo nivel de aislamiento. Espero que esta guía te haya sido
 de utilidad, hasta luego. :)&lt;/p&gt;</content><author><name>[&quot;ksobrenatural&quot;]</name></author><summary type="html">Introducción</summary></entry><entry><title type="html">Virtualización de Windows en GNU/Linux</title><link href="/blog/kvm-qemu/2021/10/02/winvirt" rel="alternate" type="text/html" title="Virtualización de Windows en GNU/Linux" /><published>2021-10-02T00:00:00+00:00</published><updated>2021-10-02T00:00:00+00:00</updated><id>/blog/kvm-qemu/2021/10/02/winvirt</id><content type="html" xml:base="/blog/kvm-qemu/2021/10/02/winvirt">&lt;p&gt;Algunas veces mientras uso GNU/Linux por diversas cuestiones es necesario que use un programa que solo este disponible en sistemas Windows, no por eso es necesario instalar un Windows en una máquina real, para eso existe la virtualización.&lt;/p&gt;

&lt;h1 id=&quot;qué-es-la-virtualización&quot;&gt;¿Qué es la virtualización?&lt;/h1&gt;

&lt;p&gt;La virtualización es una tecnología que permite simular que contamos con una computadora dentro de otra computadora, simulamos un disco, una conexión de red, memoria RAM, procesador, bueno entiendes, toda la computadora. Esto con el fin de correr programas de distintos sistemas operativos como es en este caso, aunque normalmente se usa para aislar pues en la virtualización convencional, la maquina simulada no sabe que es una simulación y no tiene acceso a la maquina real por lo que si algo malo pasara dentro de la máquina virtual, en la real solo es cuestión de borrar el archivo que contiene el disco y pum, la maquina virtual fue borrada.&lt;/p&gt;

&lt;h1 id=&quot;requerimientos&quot;&gt;Requerimientos&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Computadora con virtualización activada en la BIOS.&lt;/li&gt;
  &lt;li&gt;Espacio en disco libre mínimo de 40GB, recomendablemente un ssd.&lt;/li&gt;
  &lt;li&gt;8 GB de RAM o mas para una experiencia cómoda.&lt;/li&gt;
  &lt;li&gt;Procesador de al menos 2 núcleos, recomendablemente 4 núcleos o mas.&lt;/li&gt;
  &lt;li&gt;Es recomendable tener buena refrigeración de la computadora.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;instalar-lo-necesario&quot;&gt;Instalar lo necesario&lt;/h1&gt;

&lt;p&gt;En primer lugar necesitas instalar virt-manager que será el programa gráfico que usaremos para administrar la máquina virtual&lt;/p&gt;

&lt;p&gt;En Debian&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt install virt-manager
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;En Fedora&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo dnf install virt-manager
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Este deberá de descargar todas las dependencias necesarias como kvm y qemu que son las herramientas que se usaran tras bambalinas.&lt;/p&gt;

&lt;p&gt;En cuestión de archivos tenemos que descargar la &lt;a href=&quot;https://www.microsoft.com/es-mx/software-download/windows10ISO&quot;&gt;iso de Windows 10&lt;/a&gt; que es windows10 como tal y la &lt;a href=&quot;https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/stable-virtio/virtio-win.iso&quot;&gt;iso de virtio&lt;/a&gt; que es lo que contiene los controladores necesarios para tener mejor rendimiento.&lt;/p&gt;

&lt;h1 id=&quot;instalación-de-windows-10&quot;&gt;Instalación de Windows 10&lt;/h1&gt;

&lt;p&gt;Abriremos virt-manager y daremos clic en “crear maquina virtual”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Seleccionamos instalación local&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Seleccionamos la ISO de Windows 10&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-03.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Seleccionamos el tipo de sistema operativo como Windows 10&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Configuramos el número de núcleos y la cantidad de RAM&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Configuramos el tamaño del disco que daremos para windows10&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Escribimos el nombre que deseemos que tenga la máquina virtual, es vital que activemos la opción de configuración previa a la instalación&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-08.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-09.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cambiamos el tipo de disco a “virtio”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cambiamos el tipo de red a “virtio”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Seleccionamos la opción de añadir hardware y configuramos la iso de virtio&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Iniciamos la máquina virtual e instalamos Windows como siempre&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-15.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Seleccionamos que no tenemos licencia (a menos que si tengas)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-17.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Seleccionamos la versión que deseamos instalar (a menos que ocupes funciones del pro, te recomiendo el home pues es mas ligero)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-18.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Aceptamos términos y condiciones&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-19.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Seleccionamos instalación personalizada&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-20.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos ver que no se detecta ningún disco, debemos de seleccionar “cargar controlador”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-21.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-22.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Seleccionamos el controlador que termine con “win10”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-24.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ahora podemos ver que tenemos el disco que creamos, lo seleccionamos  e instalamos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-26.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-27.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y damos a siguiente para empezar la instalación, toca esperar&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-28.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-29.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Toca la configuración de siempre al instalar Windows&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-30.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De momento no tenemos red pues no hemos cargado el controlador, tendremos que seleccionar “no tengo internet” y crear una cuenta local&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-31.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-32.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;¡Ya entramos al escritorio!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-33.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tenemos que abrir administrador de dispositivos&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-34.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En otros dispositivos seleccionamos el controlador de Ethernet y damos a actualizar controlador&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-36.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-37.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Seleccionamos “Buscar controlador en mi equipo”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-38.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Seleccionamos el disco de virtio, en mi caso es el “E” y damos siguiente&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-39.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-40.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vemos que detecta el controlador de virtio, y damos cerrar&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-41.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Este proceso se repite con todos los controladores de “Otros equipos” y también con el adaptador de pantalla.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-42.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Igualmente lo instalamos&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-43.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;¡Terminamos!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-44.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Puede que lo notes un poco lento pues Windows hace sus cosas de descargar actualizaciones y demás configuraciones pos-instalación, pero una vez que eso esté, podemos reiniciar y ya contaremos con una maquina virtual de Windows completamente funcional.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/pictures/winvirt/virt-45.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Espero que te haya sido de utilidad, en caso de querer activar Windows, te puedo recomendar utilizar &lt;a href=&quot;https://github.com/massgravel/Microsoft-Activation-Scripts&quot;&gt;MAS&lt;/a&gt; esto te permitirá personalizar el fondo de pantalla y demás :)&lt;/p&gt;</content><author><name>[&quot;ksobrenatural&quot;]</name></author><summary type="html">Algunas veces mientras uso GNU/Linux por diversas cuestiones es necesario que use un programa que solo este disponible en sistemas Windows, no por eso es necesario instalar un Windows en una máquina real, para eso existe la virtualización.</summary></entry><entry><title type="html">Guía basica de nftables</title><link href="/blog/firewall/2021/09/25/nftables" rel="alternate" type="text/html" title="Guía basica de nftables" /><published>2021-09-25T00:00:00+00:00</published><updated>2021-09-25T00:00:00+00:00</updated><id>/blog/firewall/2021/09/25/nftables</id><content type="html" xml:base="/blog/firewall/2021/09/25/nftables">&lt;p&gt;Hola! ¿qué tal estas? En este post voy a intentar explicar qué es nftables, por que y como usarlo junto con algunos ejemplos :)&lt;/p&gt;

&lt;h1 id=&quot;qué-es&quot;&gt;¿Qué es?&lt;/h1&gt;

&lt;p&gt;Si leemos la &lt;a href=&quot;https://wiki.nftables.org/wiki-nftables/index.php/Main_Page&quot;&gt;wiki&lt;/a&gt;, nos enteramos que nftables no nada mas que el firewall del kernel de Linux, llegó para ser el sucesor de iptables, el tan conocido firewall, que por su estructura y sintaxis facilita la administración de firewall en sistemas Linux pudiendo reducir el número de reglas considerablemente&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Algo a tener en cuenta es que nftables está disponible en kernels &amp;gt;= 3.13, por lo que de tener un sistema con kernel menor, será difícil usarlo de forma correcta.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;por-qué-nftables&quot;&gt;¿Por qué nftables?&lt;/h1&gt;

&lt;p&gt;Existen “front ends” del firewall de Linux como &lt;a href=&quot;https://wiki.ubuntu.com/UncomplicatedFirewall&quot;&gt;UFW&lt;/a&gt; o &lt;a href=&quot;https://firewalld.org/&quot;&gt;firewalld&lt;/a&gt; que pueden facilitar la configuración de un sistema, sin embargo, al final estos programas corren nftables por debajo, por lo que al tratar con nftables por default, simplificamos el sistema, a cambio de dificultarnos funciones como las zonas de firewalld. Sin embargo, si tu sistema es un pequeño servidor casero o en algún vps, puede ser que te convenga simplemente tratar con nftables.&lt;/p&gt;

&lt;h1 id=&quot;cómo-usar-nftables&quot;&gt;¿Cómo usar nftables?&lt;/h1&gt;

&lt;p&gt;Primero que nada tenemos que saber si no hay otro firewall corriendo, en caso de estar, desactivarlo y opcionalmente desinstalarlo. Ya que no tenemos nada corriendo, podemos empezar a interactuar con el comando &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nft&lt;/code&gt;, esto siempre con privilegios de root.&lt;/p&gt;

&lt;p&gt;Nftables se maneja con tablas, cadenas y reglas, estando una dentro de la otra respectivamente, para listar la configuración actual, se usa:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo nft list ruleset Output default:

table inet filter {
	chain input {
		type filter hook input priority filter; policy accept;
	}
	chain forward {
		type filter hook forward priority filter; policy accept;
	}
	chain output {
		type filter hook output priority filter; policy accept;
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Las reglas por default están claras, acepta TODO, como te imaginarás esto es algo un inseguro y poco practico.&lt;/p&gt;

&lt;p&gt;Como podemos ver todo esta dentro de una sola tabla llamada “filter” de tipo inet, el &lt;strong&gt;tipo inet&lt;/strong&gt; significa que las reglas aplican tanto para ipv4 como para ipv6 (ya no mas duplicar reglas yei), dentro de la tabla se encuentran distintas &lt;strong&gt;cadenas&lt;/strong&gt;, &lt;em&gt;“input”&lt;/em&gt; que esta configurada como el filtro que va con dirección al sistema mismo desde el exterior, &lt;em&gt;“forward”&lt;/em&gt; que esta configurada como el filtro que va con redireccionamiento (esto no se suele usar a menos que estés usando nat o algo así) y &lt;em&gt;“output”&lt;/em&gt; que esta configurada como el filtro que va desde el sistema al exterior. Todas con la politica default de aceptar y no existen reglas dentro de estas, empecemos a crear algunas&lt;/p&gt;

&lt;p&gt;Supongamos que queremos bloquear el puerto 80 (http), para hacer esto se usa:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo nft add rule inet filter input tcp dport 80 deny
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ahora supongamos que queremos bloquear el puerto 22 (ssh) para cierta ip externa, usamos:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo nft add rule inet filter input ip saddr 8.8.8.8 tcp dport 22 deny
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Como podemos ver, para arreglar reglas se usa
	sudo nft add rule [familia] [tabla] [cadena] [declaración]&lt;/p&gt;

&lt;p&gt;Podemos imprimir para ver como van las reglas con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo nft list ruleset&lt;/code&gt;, el output será:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;table inet filter {
	chain input {
		type filter hook input priority filter; policy accept;
			tcp dport 80 deny
			ip saddr 8.8.8.8 tcp dport 22 deny
	}
	chain forward {
		type filter hook forward priority filter; policy accept;
	}
	chain output {
		type filter hook output priority filter; policy accept;
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Sencillo, ¿no?, ¿y si queremos borrar alguna? Bueno para eso en primer lugar debes conocer el número “handle”, esto se puede hacer con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo nft -a list ruleset&lt;/code&gt;, ejemplo:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;table inet filter { # handle 4
	chain input { # handle 1
		type filter hook input priority filter; policy accept;
			tcp dport 80 deny # handle 5
			ip saddr 8.8.8.8 tcp dport 22 deny # handle 6
	}
	chain forward { # handle 2
		type filter hook forward priority filter; policy accept;
	}
	chain output { # handle 3
		type filter hook output priority filter; policy accept;
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ya con el número de la regla, se puede borrar la regla con 
	sudo nft delete rule [familia] [tabla] [cadena] handle [número]&lt;/p&gt;

&lt;p&gt;Por ejemplo, para eliminar el bloqueo del puerto 80, usamos:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; sudo nft delete rule inet filter input handle 5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bueno y ahora puedes pensar, ¿cómo puedo guardar estas reglas para cuando reinicie el servidor? Bueno esto se consigue escribiendo en el archivo &lt;strong&gt;“/etc/nftables.conf”&lt;/strong&gt; que es el que se ejecuta cuando inicia el servicio de nftables.&lt;/p&gt;

&lt;h1 id=&quot;ejemplo-de-nftablesconf&quot;&gt;Ejemplo de nftables.conf&lt;/h1&gt;

&lt;p&gt;En este ejemplo se bloquea TODO lo que quiera entrar al servidor pero deja salir TODO a menos que cumpla algunas de las reglas. Esta es una configuración buena pero te recomiendo investigues para agregar o cerrar puertos dependiendo de tus necesidades.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#!/usr/sbin/nft -f

flush ruleset

table inet filter {
	# Tirar todo lo que venga de entrada por default
	chain input {
	type filter hook input priority filter; policy drop;
		# Si la conección es invalida, tirarlo desde un inicio 
		ct state invalid drop
		# Si la conección ya se establecio, aceptarlo
		ct state { established, related } accept
		# Permitir el loopback pero no dejar que nada externo mande paquetes dentro
		iif &quot;lo&quot; accept
		iif != &quot;lo&quot; ip daddr 127.0.0.1/8 drop
		iif != &quot;lo&quot; ip6 daddr ::1/128 drop
		# Permitir el uso del ping
		ip protocol icmp accept
		ip6 nexthdr ipv6-icmp accept
		# Puertos para servicios:
		ip saddr 192.168.1.0/24 tcp dport 22 accept # Aceptar ssh de la red local
		ip saddr 192.168.1.0/24 tcp dport 445 accept # Aceptar samba de la red local
		tcp dport 443 accept # Aceptar https de cualquier origen
	}
	# Tirar todos los paqueter que se quieran redirigir
	chain forward {
	type filter hook forward priority filter; policy drop;
	}
	# Permitir todas las salidas
	chain output {
	type filter hook output priority filter; policy accept;
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Y ya, es simple, se pueden agregar distintas tablas, cadenas y cada una de distinto tipo, si quieres saber más, te recomiendo leas la &lt;a href=&quot;https://wiki.nftables.org/wiki-nftables/index.php/Main_Page&quot;&gt;wiki&lt;/a&gt;.&lt;/p&gt;</content><author><name>[&quot;ksobrenatural&quot;]</name></author><summary type="html">Hola! ¿qué tal estas? En este post voy a intentar explicar qué es nftables, por que y como usarlo junto con algunos ejemplos :)</summary></entry><entry><title type="html">Servidor de virtualización</title><link href="/blog/kvm-qemu/2021/08/17/kvm-server" rel="alternate" type="text/html" title="Servidor de virtualización" /><published>2021-08-17T00:00:00+00:00</published><updated>2021-08-17T00:00:00+00:00</updated><id>/blog/kvm-qemu/2021/08/17/kvm-server</id><content type="html" xml:base="/blog/kvm-qemu/2021/08/17/kvm-server">&lt;h1 id=&quot;introducción&quot;&gt;Introducción&lt;/h1&gt;

&lt;p&gt;Hola! En este post voy a explicar como tener un servidor de virtualización en Debian, aunque estas instrucciones no son exclusivas para debian, pues se puede conseguir lo mismo en cualquier instalación de GNU/Linux, solo que los comandos difieren un poco.&lt;/p&gt;

&lt;p&gt;La utilidad de un servidor de virtualización es básicamente infinita, puedes emular cualquier Hardware ya sea para probar distintos sistemas operativos o para aislar distintos servicios, todo dependera de las posibilidades de tu hardware.&lt;/p&gt;

&lt;p&gt;Además del servidor de virtualización, se configurará un puente de red, esto con el objetivo de que las maquinas virtuales puedan acceder a la red local.&lt;/p&gt;

&lt;h1 id=&quot;requerimientos&quot;&gt;Requerimientos&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Computadora con Debian o derivada con Hardware de sobra para dar a maquinas virtuales&lt;/li&gt;
  &lt;li&gt;Conexión de Ethernet directa.&lt;/li&gt;
  &lt;li&gt;Servidor SSH para conexión remota. (Es posible seguir la guía de forma local)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;instalar-lo-necesario&quot;&gt;Instalar lo necesario&lt;/h1&gt;

&lt;p&gt;En primer lugar es necesario instalar un conjunto de software para virtualizar. En este caso qemu-kvm&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt install qemu qemu-kvm qemu-system qemu-utils libvirt-clients libvirt-daemon-system virtinst virt-manager bridge-utils
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Y activamos el demonio de libvirt&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl enable libvirtd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;puente-de-red&quot;&gt;Puente de red&lt;/h1&gt;

&lt;p&gt;Ahora es necesario verificar nuestra conexión a la red, esto se puede conseguir con el comando&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ip a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Ejemplo del resultado&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
   		 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
		inet 127.0.0.1/8 scope host lo
   			valid_lft forever preferred_lft forever
		inet6 ::1/128 scope host 
   			valid_lft forever preferred_lft forever
2: enp1s0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
		link/ether 52:54:00:da:fd:b4 brd ff:ff:ff:ff:ff:ff
		inet 192.168.122.220/24 brd 192.168.122.255 scope global dynamic enp1s0
   			valid_lft 3538sec preferred_lft 3538sec
		inet6 fe80::5054:ff:feda:fdb4/64 scope link 
   			valid_lft forever preferred_lft forever
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Desde aquí podemos verificar que la interfaz de nuestra conexión por Ethernet tiene como nombre enp1s0 y la ip es 192.168.122.220, sabiendo esto podemos crear el puente, necesitamos entrar al archivo de configuración de interfaces. En Debian es /etc/network/interfaces&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim /etc/network/interfaces
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dentro debemos de escribir la configuración del puente, tras modificar el archivo debe quedar así (revisa la ip, gateway y el nombre de la interfaz pues pueden no ser las mismas).&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
allow-hotplug enp1s0
iface enp1s0 inet static

auto br0
iface br0 inet static
	address 192.168.122.220
	netmask 255.255.255.0
	gateway 192.168.122.1
	bridge_ports enp1s0
	up /usr/sbin/brctl stp br0 on
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ya que estamos seguros de nuestra configuración, reiniciaremos para que estas configuraciones se apliquen. Al reiniciar podremos ver nuestra configuración algo así.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
		link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
		inet 127.0.0.1/8 scope host lo
   			valid_lft forever preferred_lft forever
		inet6 ::1/128 scope host 
   			valid_lft forever preferred_lft forever
2: enp1s0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc pfifo_fast master br0 state UP group default qlen 1000
		link/ether 52:54:00:da:fd:b4 brd ff:ff:ff:ff:ff:ff
3: br0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc noqueue state UP group default qlen 1000
		link/ether da:64:e7:16:20:c8 brd ff:ff:ff:ff:ff:ff
		inet 192.168.122.220/24 brd 192.168.122.255 scope global br0
   			valid_lft forever preferred_lft forever
		inet6 fe80::d864:e7ff:fe16:20c8/64 scope link 
   			valid_lft forever preferred_lft forever
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Como podemos observar, ahora nuestra conexión se encuentra en la interfaz br0 que es nuestro puente.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;¡Listo!&lt;/strong&gt; Ya tenemos red, ahora podemos empezar a crear nuestras máquinas virtuales.&lt;/p&gt;

&lt;h1 id=&quot;creación-de-máquinas-virtuales&quot;&gt;Creación de máquinas virtuales&lt;/h1&gt;

&lt;p&gt;Para poder correr una máquina virtual, en primer lugar será necesario crear un disco para la máquina virtual.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Creamos el directorio para nuestros discos
mkdir kvm

# Creamos el disco, es posible cambiar el nombre y el tamaño del disco
qemu-img create -f qcow2 ./debian.qcow2 8G

# Agregamos la configuración para conectarnos con qemu mientras usemos los comandos virt-install y virsh

mkdir -p ~/.config/libvirt/
echo 'uri_default = &quot;qemu:///system&quot;' | tee -a ~/.config/libvirt/libvirt.conf

# (Opcional) Agregamos a nuestro usuario al grupo libvirt

sudo usermod -a -G libvirt $(whoami)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ya que tenemos el disco, podemos instalar el sistema operativo.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;virt-install \
   		--name debian `# Nombre de la máquina` \
		--memory 1024 `# Cantidad de memoria RAM` \ 
		--disk path=./debian.qcow2,size=8,format=qcow2,bus=virtio `# Ubicación del disco de la máquina virtual` \
	--virt-type kvm \
	--cpu host \
		--vcpus 1 `# Número de núcleos para la maquina virtual` \
		--os-type linux \
		--os-variant debian11 `# Variante del sistema operativo` \
		--network bridge=br0,model=virtio `# Nombre de la interfaz de red, en este caso br0` \
		--graphics none `# Configuración sin interfaz gráfico` \
		--console pty,target_type=serial \
		--location 'http://ftp.debian.org/debian/dists/bullseye/main/installer-amd64/' \
		`# centos stream 9 'http://mirror.stream.centos.org/9-stream/BaseOS/x86_64/os/'` \
		--extra-args 'console=ttyS0,115200n8 serial'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Continuamos con nuestra instalación normal y ya podemos usar la máquina virtual. Puedes aprender como administrar la máquina virtual con el comando&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;man virsh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h1&gt;

&lt;p&gt;Crear un servidor de virtualización suele sonar más complicado de lo que es, espero que esta guía te haya sido de utilidad. :)&lt;/p&gt;

&lt;h3 id=&quot;algunas-fuentes&quot;&gt;Algunas fuentes&lt;/h3&gt;

&lt;p&gt;Last Dragon .(2021). Configurar Debian como servidor de virtualizacion con QEMU/KVM . Video de Youtube: https://www.youtube.com/watch?v=ADqWvmDbY0o&lt;/p&gt;</content><author><name>[&quot;ksobrenatural&quot;]</name></author><summary type="html">Introducción</summary></entry><entry><title type="html">¿Un blog?</title><link href="/blog/personal/2021/08/07/Intro" rel="alternate" type="text/html" title="¿Un blog?" /><published>2021-08-07T00:00:00+00:00</published><updated>2021-08-07T00:00:00+00:00</updated><id>/blog/personal/2021/08/07/Intro</id><content type="html" xml:base="/blog/personal/2021/08/07/Intro">&lt;p&gt;Este es mi post de introducción, intentare responder algunas preguntas que puedes tener apartir de la existencia de este blog.&lt;/p&gt;

&lt;h4 id=&quot;por-qué-un-blog&quot;&gt;¿Por qué un blog?&lt;/h4&gt;
&lt;p&gt;Pense en como podría tener mis notas o mini-tutoriales, tenerlas en github puede ser útil pero no es fácil compartirlo además de que ahí no lo documento en español por lo que si quiero dirigir a alguíen a mi documentación, el tema del lenguaje lo puede complicar por lo que llegué a la conclusión de que lo mejor será realizar post esporadicamente en este medio.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;El blog entero se encontrará en español, sin embargo, algunas notas pueden contener frases en inglés por las tecnologías que se ocupan.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;qué-tan-seguído-se-publicarán-post-nuevos&quot;&gt;¿Qué tan seguído se publicarán post nuevos?&lt;/h4&gt;
&lt;p&gt;Realmente no existirá un calendario, principalmente son notas, sin embargo, intentaré al menos publicar sobre algo interesante una vez al mes.&lt;/p&gt;

&lt;h4 id=&quot;sobre-qué-serán-los-posts&quot;&gt;¿Sobre qué serán los posts?&lt;/h4&gt;
&lt;p&gt;Mayormente sobre tecnología, nueva y no tan nueva, mayormente del estilo no tan abstracto, tecnologías como contenedores en linux, seguridad en servidores, desplegar algún servicio, máquinas virtuales pero si tendré algunas notas sobre lenguajes de programación.&lt;/p&gt;</content><author><name>[&quot;ksobrenatural&quot;]</name></author><summary type="html">Este es mi post de introducción, intentare responder algunas preguntas que puedes tener apartir de la existencia de este blog.</summary></entry></feed>